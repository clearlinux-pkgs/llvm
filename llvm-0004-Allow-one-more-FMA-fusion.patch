From ed804741f0e6ad6da16ebae153b8e91f3c84bd16 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Tue, 9 Apr 2019 05:09:34 +0000
Subject: [llvm] Allow one more FMA fusion

---
 llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
index ec384d2a7c56..f32523461ad6 100644
--- llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
+++ llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
@@ -11995,7 +11995,7 @@ SDValue DAGCombiner::visitFADDForFMACombine(SDNode *N) {
   bool CanFuse = Options.UnsafeFPMath || isContractable(N);
   bool CanReassociate =
       Options.UnsafeFPMath || N->getFlags().hasAllowReassociation();
-  bool AllowFusionGlobally = (Options.AllowFPOpFusion == FPOpFusion::Fast ||
+  bool AllowFusionGlobally = (Options.AllowFPOpFusion == FPOpFusion::Fast || Options.AllowFPOpFusion == FPOpFusion::Standard || 
                               CanFuse || HasFMAD);
   // If the addition is not contractable, do not combine.
   if (!AllowFusionGlobally && !isContractable(N))
-- 
2.31.1

